buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'

version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
		url 'https://raw.github.com/acichon89/fantacalcio-commons/mvn-repo'
	}
	maven {
		url 'https://jitpack.io'
	}
}


ext {
	springCloudVersion = 'Dalston.RELEASE'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-integration')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	runtime group: 'org.xerial', name: 'sqlite-jdbc', version: '3.19.3'
	runtime 'com.github.gwenn:sqlite-dialect:master'
	compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	compile "org.projectlombok:lombok:1.16.16"
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.2'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.8.8'
	compile group: 'org.apache.commons', name: 'commons-email', version: '1.4'
	compile('org.flywaydb:flyway-core')
	compile('com.javangarda.fantacalcio:fantacalcio-commons:1.0.0') {
		exclude	group : 'javax.validation'
		exclude group : 'javax.persistence'
		exclude group : 'org.springframework'
		exclude group : 'org.springframework.security'
		exclude group : 'org.springframework.data'
	}


	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
bootRun {
	systemProperties System.properties
}

springBoot {
	executable = true
}

jacocoTestReport(){
	group = "Reporting"
	description = "Generate Jacoco coverage reports after running tests."
	reports {
		xml.enabled = true // coveralls plugin depends on xml format report
		html.enabled = true
	}
}
build.dependsOn(jacocoTestReport)